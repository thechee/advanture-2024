"""added tables assocaited with vans

Revision ID: 8931130cbc53
Revises: cd960980e57f
Create Date: 2024-02-28 12:52:12.799858

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '8931130cbc53'
down_revision = 'cd960980e57f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fuel_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fuel_type', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('make', sa.String(length=30), nullable=False),
    sa.Column('model', sa.String(length=30), nullable=False),
    sa.Column('miles', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=30), nullable=False),
    sa.Column('state', sa.String(length=30), nullable=False),
    sa.Column('zip_code', sa.Integer(), nullable=False),
    sa.Column('rental_rate', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('distance_allowed', sa.Integer(), nullable=True),
    sa.Column('mpg', sa.Integer(), nullable=True),
    sa.Column('doors', sa.Integer(), nullable=False),
    sa.Column('seats', sa.Integer(), nullable=False),
    sa.Column('fuel_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['fuel_type_id'], ['fuel_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('van_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('van_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=False),
    sa.Column('preview', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['van_id'], ['vans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('profile_image_url',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)

    if environment == "production":
        op.execute(f"ALTER TABLE features SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE fuel_types SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE vans SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE van_images SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('profile_image_url',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)

    op.drop_table('van_images')
    op.drop_table('vans')
    op.drop_table('fuel_types')
    op.drop_table('features')
    # ### end Alembic commands ###
